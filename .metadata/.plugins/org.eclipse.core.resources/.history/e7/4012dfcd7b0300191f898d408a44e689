module org.xtext.example.projection.GenerateProjection

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.xtext.projection"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "windows-1252"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		/*language = StandardLanguage {
			name = "org.xtext.example.projection.ProjectionMainParser"
			referencedResource="platform:/resource/org.xtext.example.mydsl/src/org/xtext/example/projection/Projection.xtext"
			fileExtensions = "projection"

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}*/
		language = StandardLanguage {
			name = "org.xtext.example.projection.Projection"
			referencedResource="platform:/resource/org.xtext.example.mydsl/src/org/xtext/example/projection/ProjectionMainParser.xtext"
			fileExtensions = "projection"

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
		language = StandardLanguage {
			name = "org.xtext.example.projection.ProjectionMainParser"
			//referencedResource="platform:/resource/org.xtext.example.mydsl/src/org/xtext/example/projection/Projection.xtext"
			fileExtensions = "projection2"

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
	}
}